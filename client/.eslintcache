[{"C:\\Users\\Berkan\\Desktop\\react-social-media\\client\\src\\index.js":"1","C:\\Users\\Berkan\\Desktop\\react-social-media\\client\\src\\App.js":"2","C:\\Users\\Berkan\\Desktop\\react-social-media\\client\\src\\ApolloProvider.js":"3","C:\\Users\\Berkan\\Desktop\\react-social-media\\client\\src\\pages\\Login.js":"4","C:\\Users\\Berkan\\Desktop\\react-social-media\\client\\src\\pages\\Register.js":"5","C:\\Users\\Berkan\\Desktop\\react-social-media\\client\\src\\pages\\Home.js":"6","C:\\Users\\Berkan\\Desktop\\react-social-media\\client\\src\\components\\Navbar.js":"7","C:\\Users\\Berkan\\Desktop\\react-social-media\\client\\src\\components\\PostCard.js":"8"},{"size":155,"mtime":1607123587560,"results":"9","hashOfConfig":"10"},{"size":668,"mtime":1607172738791,"results":"11","hashOfConfig":"10"},{"size":420,"mtime":1607167828497,"results":"12","hashOfConfig":"10"},{"size":166,"mtime":1607171449390,"results":"13","hashOfConfig":"10"},{"size":1802,"mtime":1607381852907,"results":"14","hashOfConfig":"10"},{"size":1248,"mtime":1607280235101,"results":"15","hashOfConfig":"10"},{"size":1546,"mtime":1607203454206,"results":"16","hashOfConfig":"10"},{"size":1499,"mtime":1607279909088,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"3rdwnw",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"C:\\Users\\Berkan\\Desktop\\react-social-media\\client\\src\\index.js",[],["37","38"],"C:\\Users\\Berkan\\Desktop\\react-social-media\\client\\src\\App.js",[],"C:\\Users\\Berkan\\Desktop\\react-social-media\\client\\src\\ApolloProvider.js",[],"C:\\Users\\Berkan\\Desktop\\react-social-media\\client\\src\\pages\\Login.js",[],"C:\\Users\\Berkan\\Desktop\\react-social-media\\client\\src\\pages\\Register.js",[],"C:\\Users\\Berkan\\Desktop\\react-social-media\\client\\src\\pages\\Home.js",["39","40"],"import React, { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport PostCard from '../components/PostCard';\r\n\r\nconst FETCH_POSTS_QUERY = gql`\r\n    {\r\n        getPosts {\r\n            id body createdAt username likeCount\r\n            likes {\r\n                username\r\n            }\r\n            commentCount\r\n            comments {\r\n                id username createdAt body\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst Home = () => {\r\n    const { loading, error, data } = useQuery(FETCH_POSTS_QUERY);\r\n\r\n    return (\r\n        <Grid columns={3}>\r\n            <Grid.Row className='page-title'>\r\n                <h1>Recent Posts</h1>\r\n            </Grid.Row>\r\n\r\n            <Grid.Row>\r\n                {loading ? (\r\n                    <h1>Loading posts...</h1>\r\n                ) : (\r\n                    data.getPosts && data.getPosts.map(post => (\r\n                        <Grid.Column key={post.id} style={{ marginBottom: 20 }}>\r\n                            <PostCard post={post} />\r\n                        </Grid.Column>\r\n                    ))\r\n                )}\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Berkan\\Desktop\\react-social-media\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Berkan\\Desktop\\react-social-media\\client\\src\\components\\PostCard.js",["41","42","43","44"],"import React, { useState } from 'react';\r\nimport { Card, Icon, Label, Image, Button } from 'semantic-ui-react';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PostCard = ({ post }) => {\r\n  const { body, createdAt, id, username, likeCount, likes, commentCount, comments } = post;\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  const likePost = () => {\r\n    setLiked(!liked);\r\n    console.log('like');\r\n  };\r\n\r\n  const postComment = () => {\r\n    console.log('comment');\r\n  };\r\n\r\n  return (\r\n    <Card fluid>\r\n      <Card.Content>\r\n        <Image\r\n          floated='right'\r\n          size='mini'\r\n          src='https://react.semantic-ui.com/images/avatar/large/molly.png'\r\n        />\r\n        <Card.Header>{username}</Card.Header>\r\n        <Card.Meta as={Link} to={`/posts/${id}`}>{moment(createdAt).fromNow()}</Card.Meta>\r\n        <Card.Description>{body}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Button\r\n          color='purple'\r\n          icon='heart'\r\n          basic={!liked}\r\n          label={{ basic: true, color: 'purple', pointing: 'left', content: `${likeCount}` }}\r\n          onClick={likePost}\r\n        />\r\n        <Button\r\n          color='blue'\r\n          icon='comment'\r\n          basic='true'\r\n          label={{ basic: true, color: 'blue', pointing: 'left', content: `${commentCount}` }}\r\n          onClick={postComment}\r\n        />\r\n      </Card.Content>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PostCard;\r\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":26},{"ruleId":"49","severity":1,"message":"53","line":23,"column":22,"nodeType":"51","messageId":"52","endLine":23,"endColumn":27},{"ruleId":"49","severity":1,"message":"54","line":2,"column":16,"nodeType":"51","messageId":"52","endLine":2,"endColumn":20},{"ruleId":"49","severity":1,"message":"55","line":2,"column":22,"nodeType":"51","messageId":"52","endLine":2,"endColumn":27},{"ruleId":"49","severity":1,"message":"56","line":7,"column":53,"nodeType":"51","messageId":"52","endLine":7,"endColumn":58},{"ruleId":"49","severity":1,"message":"57","line":7,"column":74,"nodeType":"51","messageId":"52","endLine":7,"endColumn":82},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'Icon' is defined but never used.","'Label' is defined but never used.","'likes' is assigned a value but never used.","'comments' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]